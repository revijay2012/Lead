import{d as e}from"./index-BgRM5gx4.js";import{R as t,r as a}from"./react-vendor-DtX1tuCI.js";import{p as s,T as r,q as l,j as o,l as c,k as n}from"./firebase-vendor-C5ggpXef.js";const d=a.createContext(void 0);function i(){const{state:e,setMode:s,setTerm:r,setFilters:l,setLoading:o,setError:c,setResults:n,setSelected:i,clearResults:u,addRecentSearch:m,setHasMore:h,setLastDoc:_,getCachedResults:f,setCachedResults:p,searchKey:w}=function(){const e=a.useContext(d);if(void 0===e)throw new Error("useSearchContext must be used within a SearchProvider");return e}();return t.useEffect(()=>{const e=localStorage.getItem("recentSearches");if(e)try{JSON.parse(e).forEach(e=>{m(e)})}catch(t){}},[m]),t.useEffect(()=>{e.recentSearches.length>0&&localStorage.setItem("recentSearches",JSON.stringify(e.recentSearches))},[e.recentSearches]),{mode:e.mode,term:e.term,filters:e.filters,results:e.results,loading:e.loading,error:e.error,hasMore:e.hasMore,lastDoc:e.lastDoc,selectedResult:e.selectedResult,recentSearches:e.recentSearches,setMode:s,setTerm:r,setFilters:l,setSelected:i,clearResults:u,addRecentSearch:m,searchKey:w,getCachedResults:f,setCachedResults:p,setLoading:o,setError:c,setResults:n,setHasMore:h,setLastDoc:_}}const u=new class{async search(e,t,a={}){const{filters:s={},lastDoc:r}=a;try{switch(e){case"leads":case"global":default:return await this.searchLeads(t,s,r);case"activities":case"proposals":case"contracts":return{results:[],hasMore:!1,lastDoc:null}}}catch(l){throw new Error(`Search failed: ${l instanceof Error?l.message:"Unknown error"}`)}}async searchLeads(t,a,d){if(!t.trim())return{results:[],hasMore:!1};const i=t.toLowerCase().trim(),u=i.split(" ").filter(e=>e.length>0);try{let t=[];try{let d=[s("search_prefixes","array-contains",i)];a.status&&d.push(s("status","==",a.status)),a.created_date_from&&d.push(s("created_at",">=",r.fromDate(a.created_date_from))),a.created_date_to&&d.push(s("created_at","<=",r.fromDate(a.created_date_to))),a.updated_date_from&&d.push(s("updated_at",">=",r.fromDate(a.updated_date_from))),a.updated_date_to&&d.push(s("updated_at","<=",r.fromDate(a.updated_date_to))),a.source&&d.push(s("source","==",a.source));let u=l(o(e,"leads"),...d,c(20));t=(await n(u)).docs.map(e=>{const t=e.data();return{id:e.id,type:"lead",title:t.full_name||`${t.first_name} ${t.last_name}`,subtitle:t.email,status:t.status,timestamp:t.created_at||r.now(),lead_id:e.id,lead_name:t.full_name||`${t.first_name} ${t.last_name}`,data:t}})}catch(m){}if(0===t.length){const a=[];u.length>0&&a.push(l(o(e,"leads"),s("first_name_lower",">=",u[0]),s("first_name_lower","<=",u[0]+""),c(10))),u.length>0&&a.push(l(o(e,"leads"),s("last_name_lower",">=",u[0]),s("last_name_lower","<=",u[0]+""),c(10))),a.push(l(o(e,"leads"),s("full_name_lower",">=",i),s("full_name_lower","<=",i+""),c(10))),i.includes("@")&&a.push(l(o(e,"leads"),s("email_lower",">=",i),s("email_lower","<=",i+""),c(10)));const d=await Promise.all(a.map(e=>n(e).catch(()=>({docs:[]})))),m=new Map;d.forEach(e=>{e.docs.forEach(e=>{if(!m.has(e.id)){const t=e.data();m.set(e.id,{id:e.id,type:"lead",title:t.full_name||`${t.first_name} ${t.last_name}`,subtitle:t.email,status:t.status,timestamp:t.created_at||r.now(),lead_id:e.id,lead_name:t.full_name||`${t.first_name} ${t.last_name}`,data:t})}})}),t=Array.from(m.values())}if(0===t.length){const a=l(o(e,"leads"),s("search_prefixes","array-contains",i),c(20));t=(await n(a)).docs.map(e=>{const t=e.data();return{id:e.id,type:"lead",title:t.full_name||`${t.first_name} ${t.last_name}`,subtitle:t.email,status:t.status,timestamp:t.created_at||r.now(),lead_id:e.id,lead_name:t.full_name||`${t.first_name} ${t.last_name}`,data:t}})}return{results:t,hasMore:20===t.length,lastDoc:snapshot.docs[snapshot.docs.length-1]}}catch(h){return{results:[],hasMore:!1,lastDoc:null}}}async loadMore(e,t,a,s={}){return this.search(e,t,{...s,lastDoc:a})}};export{u as s,i as u};
